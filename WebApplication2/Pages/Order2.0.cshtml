@page
@model ordermodel

<table id="productTable">
    <thead>
        <tr>
            <th>Nom du produit</th>
            <th>Prix</th>
            <th>Action</th>
        </tr>
    </thead>
        <div class="form-group">
            <label for="productSelection">Sélectionnez un produit</label>
            <select class="form-control" id="productSelection">
                @foreach (var product in Model.Products)
                {
                    <option value="@product.Id">@product.Name - @product.Price €</option>
                }
            </select>
        </div>
        <button id="addToCart" class="btn btn-primary">Ajouter au panier</button>
</table>

<h3>Votre Commande</h3>
<table class="table" id="orderTable">
    <thead>
        <tr>
            <th>Nom du Produit</th>
            <th>Prix</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="orderTableBody">
        <!-- Les lignes de commande seront ajoutées ici dynamiquement -->
    </tbody>
</table>
<button id="finishOrder" class="btn btn-success">Terminer la commande</button>


<script type="text/javascript">
    let selectedProducts = [];
    document.getElementById('addToCart').addEventListener('click', function() {
        let productSelection = document.getElementById('productSelection');
        let selectedProductId = productSelection.value;

        // Récupérer le nom et le prix du produit sélectionné
        let selectedProductOption = productSelection.options[productSelection.selectedIndex];
        let selectedProductName = selectedProductOption.text;
        let selectedProductPrice = parseFloat(selectedProductName.split(" - ")[1]);

        // Créer une nouvelle ligne de commande
        let orderTableBody = document.getElementById('orderTableBody');
        let newRow = orderTableBody.insertRow();
        let nameCell = newRow.insertCell(0);
        let priceCell = newRow.insertCell(1);
        let actionCell = newRow.insertCell(2);
        nameCell.innerHTML = selectedProductName;
        priceCell.innerHTML = selectedProductPrice;
        actionCell.innerHTML = '<button class="btn btn-danger" onclick="removeOrderItem(this)">Retirer</button>';
        
        let selectedProductData = {
                    Id: selectedProductId,
                    Name: selectedProductName,
                    Price: selectedProductPrice
                };
        
                // Ajouter le produit sélectionné à la liste
                selectedProducts.push(selectedProductData);
    });
    
    document.getElementById('finishOrder').addEventListener('click', function() {
        // Envoyer la liste des produits sélectionnés au serveur via une requête AJAX
        fetch('/order2.0/OnPostFinishOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(selectedProducts)
        })
        .then(response => response.json())
        .then(data => {
            console.log('Réponse du serveur : ', data);
        })
        .catch(error => {
            console.error('Erreur lors de l\'envoi des données au serveur : ' + error);
        });
    });

    // Fonction pour retirer une ligne de commande du tableau
    function removeOrderItem(button) {
        let row = button.parentElement.parentElement;
        row.remove();
    }
    
    
</script>
